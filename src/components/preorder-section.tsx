"use client"
/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/E5aQhkTM2AG
 */
import { Input } from "@/components/ui/input"
import { Button } from "@/components/ui/button"
import useSWR, { useSWRConfig } from "swr"
import { createPreorderAction } from "@/actions/createPreorder"
import { useId } from "react"

/**
 * A SWR fetcher is the function
 * that takes care of the actual server request
 * 
 * Then SWR handles everything else:
 * caching, loading and error states, polling...
 */
async function jsonFetch(url: string) {
  const res = await fetch(url, {
    headers: {
      Accept: "application/json"
    }
  })
  const data = await res.json()
  return data
}

export function PreorderSection({ initialCount }: { initialCount: number }) {
  const { mutate } = useSWRConfig()
  const { data /*, error, isLoading*/ } = useSWR<{ count: number }>(
    '/api/preorder/count',
    jsonFetch,
    {
      // Even if the client-side call throws an error
      // or is loading
      // "data" will contain the initialCount we got from the server
      // NOTE: this is used only for the first render,
      // be careful with later refresh
      fallbackData: { count: initialCount },
      // In ms, will send a new request every 2 seconds
      refreshInterval: 2000
    })
  const emailId = useId()
  const finalCount = data?.count || 1
  return (
    <section className="w-full py-12 md:py-24 lg:py-32">
      <div className="container grid items-center justify-center gap-4 
      mx-auto
      px-4 text-center md:px-6">
        <div className="space-y-3">
          <h2 className="text-3xl font-bold tracking-tighter md:text-4xl/tight">
            Preorder our latest product now
          </h2>
          <p className="mx-auto max-w-[600px] text-zinc-500 md:text-xl/relaxed lg:text-base/relaxed xl:text-xl/relaxed dark:text-zinc-400">
            Join the other {finalCount} customers who have already preordered.
          </p>
        </div>
        <div className="mx-auto w-full max-w-sm space-y-2">
          <form className="flex space-x-2"
            // We must call the action manually
            // because we also need a client-side "mutate" call
            // action={createPreorderAction}
            onSubmit={async (evt) => {
              // Do not refresh the page automatically
              evt.preventDefault()
              await createPreorderAction(new FormData(evt.target as HTMLFormElement))
              // forces SWR to immediately refetch data
              mutate("/api/preorder/count")
            }}
          >
            <Input className="max-w-lg flex-1"
              id={emailId}
              name="email"
              placeholder="Enter your email"
              type="email" />
            <Button
              className="bg-blue-500 text-white rounded-lg" type="submit">
              Preorder Now
            </Button>
          </form>
          <p className="text-xs text-zinc-500 dark:text-zinc-400">We will notify you when the product is available.</p>
        </div>
      </div>
    </section>
  )
}
